Синтаксис команды ATC

Поезд запускает текущую команду ATC сразу после ее получения, включая задержанные инструкции. Если поезд получает новую команду, текущая команда сбрасывается.
Пробелы могут быть вставлены в команды по мере необходимости и игнорируются.

# простые команды:

S<[0-9]+ скорость или 'M'>
Устанавливает целевую скорость поезда на <скорость>. Ускоряет, если поезд медленнее, текущая скорость, если поезд быстрее. 'M' означает максимальную скорость.
Команда выполненяется немедленно.

B<[0-9]+ скорость>
Тормоз до достижения скорости. Если поезд быстрее, применяются тормоза, если медленнее, ничего не делается.
Команда выполненяется немедленно.

Примеры:
SM : ускорение до максимальной скорости
S0 : катится до полной остановки
B0 : тормозить до полной остановки
S0B3 or B3S0: тормоз до 3, потом катится до полной остановки.

W
Задержка, пока команды S или B не достигнут желаемой скорости, прежде чем продолжить выполнение следующей команды.

D<[0-9]+ время>
Задержка: Подождать несколько секунд, прежде чем продолжить выполнение.

R
Задняя передача: изменить направление движения поезда. РАБОТАЕТ ТОЛЬКО КОГДА ПОЕЗД СТОИТ, иначе команда игнорируется.
Используйте B0WR, чтобы определенно изменить направление.

Примеры:
B0 W R D10 SM
Поезд в метро останавливается в тупиковой станции и возвращается в противоположном направлении

OL
Открыть левые двери
OR
Открыть правые двери
OC
Закрыть все двери

Все команды дверей относительны к направлению движения, поэтому, если поезд движется в направлении противоположной стрелки, L откроет правые двери с точки зрения водителя.
Команда выполненяется немедленно. Нет возможности подождать, пока все двери будут открыты/закрыты.

Примеры:
B0 W OL D10 OC D1 SM
Subway train: stop in station and open doors, depart after 10 seconds.
Метро: остановка на станции и открытие дверей, через 10 секунд закрытие дверей и отправка поезда.

# условные инструкции:

I<условие><код>;
Выполнять код, только если условие применяемо
I<условие><код1>E<код2>;
Выполнять код1, если условие применяемо, иначе выполнить код2

Условия:
+ | -
Проверяет направление движения поезда по стрелки на ATC рельсах: M+ истинно когда поезд движется в направлении стрелки.

( < | > | <= | >= )<скорость>
Проверяет текущую скорость поезда, больше ли или меньше, чем заданное значение.

Примеры:
I- B0 W R ; S8
Если направление поезда в "неверном" направлении, остановить поезд и сменить направление; в любом случае установить скорость 8.

I<8 S8 ;
Если поезд медленнее, чем 8, ускорить до 8.

# Режимы работы контроллера ATC
static: Выдаёт только 1 статическую команду.

mesecon: Give 2 different commands depending on if the controller is mesecon-powered or not
digiline: Don't give any commands by itself. When a train passes, a digiline message in the form of "[+/-][speed]" is sent on the set channel (where +/- means the same as with conditions). Any digiline message sent to the controller will be interpreted as ATC command and sent to the train.
** the latter two are not yet implemented.

mesecon: Выдаёт 2 различные команды в зависимости от того, если контроллер управляется через mesecon или нет
digiline: Не выдаёт никаких команд самостоятельно. Когда поезд проходит, на заданный канал отправляется сообщение digiline в виде "[+|-]<скорость>" (где +/- означает то же, что и в условиях). Любое сообщение digiline посланное к контроллеру будет интерпретировано как команда ATC и будет послано к поезду.
** последние две функции еще не реализованы.

# Персистентность
Контроллеры ATC в режиме 'static' или 'mesecon' выполняют свою работу даже при разгрузки блоков карты (mapblock), и продолжают управлять поезда. Это невозможно с digilines, так как они НЕ работают в разгруженных блокax карты (mapchunks).

# LUA ATC Контроллеры (в разработке)
The LUA ATC Controller will operate by using LUA code. All operations shown above will have a function equivalent. Additionally all LUA ATC controllers share an environment and setting signal and switch status will be possible to allow for complicated railway systems/fully automated subways a.s.o.

LUA ATC контроллеры будут работать при использование кода LUA. Все операции, показанные выше, будут иметь эквивалентные функции. Дополнительно все LUA ATC контроллеры делят среду выполнения (runtime environment) и состояния сигналов и переключателей, таким образом будет возможно разрабатывать более сложненные схемы управленея и автоматизации железной дороги.


Также запланированно:
- digicompute add-on для доступа компьютера к средe выполнения ATC (крты железной дороги... ... ... ... ...)
